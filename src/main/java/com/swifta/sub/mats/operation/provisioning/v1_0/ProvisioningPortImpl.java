/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.swifta.sub.mats.operation.provisioning.v1_0;

import java.util.logging.Logger;

import com.swifta.provisioning.utils.AccountHolderService;
import com.swifta.sub.mats.operation.provisioning.v1.Activationrequestresponse;
import com.swifta.sub.mats.operation.provisioning.v1.Registrationrequestresponse;

/**
 * This class was generated by Apache CXF 3.0.2 2014-11-10T13:20:46.277+01:00
 * Generated source version: 3.0.2
 * 
 */

@javax.jws.WebService(serviceName = "provisioning", portName = "ProvisioningPort", targetNamespace = "http://swifta.com/sub/mats/operation/provisioning/v1.0", wsdlLocation = "/Users/user/Downloads/Provisioning-1.wsdl", endpointInterface = "com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning")
public class ProvisioningPortImpl implements Provisioning {

	private static final Logger LOG = Logger
			.getLogger(ProvisioningPortImpl.class.getName());
	private AccountHolderService accountHolderService = new AccountHolderService();

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addpermissionstoaccountprofile(java.lang.String profile
	 * ,)java.util.List<java.lang.String> activepermissions )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addpermissionstoaccountprofile(
			java.lang.String profile,
			java.util.List<java.lang.String> activepermissions) {
		LOG.info("Executing operation addpermissionstoaccountprofile");
		System.out.println(profile);
		System.out.println(activepermissions);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#activation
	 * (java.lang.String resourceid
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Credentials credential
	 * ,)java.lang.String securityquestionanswer ,)java.lang.String
	 * identificationno ,)java.lang.String bankdomain ,)java.lang.String
	 * currency )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Activationrequestresponse activation(
			java.lang.String resourceid,
			com.swifta.sub.mats.operation.provisioning.v1.Credentials credential,
			java.lang.String securityquestionanswer,
			java.lang.String identificationno, java.lang.String bankdomain,
			java.lang.String currency) {
		LOG.info("Executing operation activation");
		System.out.println(resourceid);
		System.out.println(credential);
		System.out.println(securityquestionanswer);
		System.out.println(identificationno);
		System.out.println(bankdomain);
		System.out.println(currency);
		try {
			Activationrequestresponse requestResponse = new Activationrequestresponse();
			requestResponse.setResponsemessage(accountHolderService
					.activateUser(resourceid, credential,
							securityquestionanswer, identificationno,
							bankdomain, currency));
			return requestResponse;

		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#addprofile
	 * (java.lang.String profilename
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Profiletype profiletype
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addprofile(
			java.lang.String profilename,
			com.swifta.sub.mats.operation.provisioning.v1.Profiletype profiletype,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addprofile");
		System.out.println(profilename);
		System.out.println(profiletype);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#registration
	 * (java.lang.String username ,)java.lang.String msisdn ,)java.lang.String
	 * email ,)int profileid ,)int bankcodeid ,)java.lang.String bankaccount
	 * ,)java.lang.String clearingnumber
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Accountholderdetails
	 * accountholderdetails ,)java.lang.String currency ,)java.lang.String
	 * bankdomainname ,)java.lang.String termscondition
	 * ,)java.util.List<com.swifta
	 * .sub.mats.operation.provisioning.v1.Securityquestions> securityquestions
	 * )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Registrationrequestresponse registration(
			java.lang.String username,
			java.lang.String msisdn,
			java.lang.String email,
			int profileid,
			int bankcodeid,
			java.lang.String bankaccount,
			java.lang.String clearingnumber,
			com.swifta.sub.mats.operation.provisioning.v1.Accountholderdetails accountholderdetails,
			java.lang.String currency,
			java.lang.String bankdomainname,
			java.lang.String termscondition,
			java.util.List<com.swifta.sub.mats.operation.provisioning.v1.Securityquestions> securityquestions) {
		LOG.info("Executing operation registration");
		System.out.println(username);
		System.out.println(msisdn);
		System.out.println(email);
		System.out.println(profileid);
		System.out.println(bankcodeid);
		System.out.println(bankaccount);
		System.out.println(clearingnumber);
		System.out.println(accountholderdetails);
		System.out.println(currency);
		System.out.println(bankdomainname);
		System.out.println(termscondition);
		System.out.println(securityquestions);
		try {
			int currencyid = Integer.parseInt(currency);
			int bankdomainid = Integer.parseInt(bankdomainname);
			// com.swifta.sub.mats.operation.provisioning.v1.Registrationrequestresponse
			// _return = null;
			Registrationrequestresponse requestResponse = new Registrationrequestresponse();
			requestResponse.setResponsemessage(accountHolderService
					.registerUser(accountholderdetails, bankaccount,
							bankcodeid, bankdomainid, clearingnumber,
							currencyid, email, msisdn, profileid,
							securityquestions, termscondition, username));
			return requestResponse;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addthresholdtoaccountprofile(java.lang.String profile ,)java.lang.String
	 * countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype
	 * thresholdtype
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Transactiontype
	 * transactiontype ,)java.lang.String value ,)java.lang.String
	 * thresholdmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addthresholdtoaccountprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype thresholdtype,
			com.swifta.sub.mats.operation.provisioning.v1.Transactiontype transactiontype,
			java.lang.String value,
			java.lang.String thresholdmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addthresholdtoaccountprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(thresholdtype);
		System.out.println(transactiontype);
		System.out.println(value);
		System.out.println(thresholdmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * suspendaccountholder(java.lang.String resourceid ,)java.lang.String
	 * confirmcredential )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Suspendaccountholderrequestresponse suspendaccountholder(
			java.lang.String resourceid, java.lang.String confirmcredential) {
		LOG.info("Executing operation suspendaccountholder");
		System.out.println(resourceid);
		System.out.println(confirmcredential);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Suspendaccountholderrequestresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addthreadholdmessagetouserprofile(java.lang.String profile
	 * ,)java.lang.String countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype
	 * thresholdtype ,)java.lang.String thresholdmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addthreadholdmessagetouserprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype thresholdtype,
			java.lang.String thresholdmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addthreadholdmessagetouserprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(thresholdtype);
		System.out.println(thresholdmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#addaccount
	 * (java.lang.String accounttype ,)java.lang.String accountprofileid
	 * ,)java.lang.String accountreferenceprofile )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Addaccountrequestresponse addaccount(
			java.lang.String accounttype, java.lang.String accountprofileid,
			java.lang.String accountreferenceprofile) {
		LOG.info("Executing operation addaccount");
		System.out.println(accounttype);
		System.out.println(accountprofileid);
		System.out.println(accountreferenceprofile);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Addaccountrequestresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addthresholdtouserprofile(java.lang.String profile ,)java.lang.String
	 * thresholdname ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype
	 * thresholdtype
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Transactiontype
	 * transactiontype ,)java.lang.String value ,)java.lang.String
	 * thresholdmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addthresholdtouserprofile(
			java.lang.String profile,
			java.lang.String thresholdname,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype thresholdtype,
			com.swifta.sub.mats.operation.provisioning.v1.Transactiontype transactiontype,
			java.lang.String value,
			java.lang.String thresholdmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addthresholdtouserprofile");
		System.out.println(profile);
		System.out.println(thresholdname);
		System.out.println(description);
		System.out.println(thresholdtype);
		System.out.println(transactiontype);
		System.out.println(value);
		System.out.println(thresholdmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#editbackofusers
	 * (java.lang.String firstname ,)java.lang.String surname ,)java.lang.String
	 * username ,)java.lang.String msisdn ,)java.lang.String email
	 * ,)java.lang.String profile )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse editbackofusers(
			java.lang.String firstname, java.lang.String surname,
			java.lang.String username, java.lang.String msisdn,
			java.lang.String email, java.lang.String profile) {
		LOG.info("Executing operation editbackofusers");
		System.out.println(firstname);
		System.out.println(surname);
		System.out.println(username);
		System.out.println(msisdn);
		System.out.println(email);
		System.out.println(profile);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addpermissionstouserprofile(java.lang.String profile
	 * ,)java.util.List<java.lang.String> activepermissions )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addpermissionstouserprofile(
			java.lang.String profile,
			java.util.List<java.lang.String> activepermissions) {
		LOG.info("Executing operation addpermissionstouserprofile");
		System.out.println(profile);
		System.out.println(activepermissions);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * disconnectaccount(java.lang.String userresourceid ,)java.lang.String
	 * paraentaccountresourceid ,)java.lang.String reason )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Disconnectaccountrequestresponse disconnectaccount(
			java.lang.String userresourceid,
			java.lang.String paraentaccountresourceid, java.lang.String reason) {
		LOG.info("Executing operation disconnectaccount");
		System.out.println(userresourceid);
		System.out.println(paraentaccountresourceid);
		System.out.println(reason);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Disconnectaccountrequestresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addcustodyaccount(java.lang.String currencycode ,)java.lang.String
	 * bankcode ,)java.lang.String accountnumber ,)java.lang.String accountname
	 * ,)java.lang.String bankdomain )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Addaccountrequestresponse addcustodyaccount(
			java.lang.String currencycode, java.lang.String bankcode,
			java.lang.String accountnumber, java.lang.String accountname,
			java.lang.String bankdomain) {
		LOG.info("Executing operation addcustodyaccount");
		System.out.println(currencycode);
		System.out.println(bankcode);
		System.out.println(accountnumber);
		System.out.println(accountname);
		System.out.println(bankdomain);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Addaccountrequestresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addtransferCounttoaccountprofile(java.lang.String profile
	 * ,)java.lang.String countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype
	 * countertype ,)java.lang.String transactiontype ,)java.lang.String limit
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery
	 * autoresetcounter ,)java.lang.String limitmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addtransferCounttoaccountprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype countertype,
			java.lang.String transactiontype,
			java.lang.String limit,
			com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery autoresetcounter,
			java.lang.String limitmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addtransferCounttoaccountprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(countertype);
		System.out.println(transactiontype);
		System.out.println(limit);
		System.out.println(autoresetcounter);
		System.out.println(limitmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#getProfileofUser
	 * (java.lang.String resourceid )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Getprofileofuserresponse getProfileofUser(
			java.lang.String resourceid) {
		LOG.info("Executing operation getProfileofUser");
		System.out.println(resourceid);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Getprofileofuserresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#changepassword
	 * (java.lang.String currentpassword ,)java.lang.String newpassword
	 * ,)java.lang.String confirmpassword )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse changepassword(
			java.lang.String currentpassword, java.lang.String newpassword,
			java.lang.String confirmpassword) {
		LOG.info("Executing operation changepassword");
		System.out.println(currentpassword);
		System.out.println(newpassword);
		System.out.println(confirmpassword);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * isProfileauthorised(java.lang.String profilename ,)java.lang.String
	 * operation ,)java.lang.String permission )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Isprofileauthorisedresponse isProfileauthorised(
			java.lang.String profilename, java.lang.String operation,
			java.lang.String permission) {
		LOG.info("Executing operation isProfileauthorised");
		System.out.println(profilename);
		System.out.println(operation);
		System.out.println(permission);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Isprofileauthorisedresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * connectaccountrequest(java.lang.String userresourceid ,)java.lang.String
	 * profileid ,)java.lang.String paraentaccountresourceid ,)java.lang.String
	 * reason )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Connectaccountrequestresponse connectaccountrequest(
			java.lang.String userresourceid, java.lang.String profileid,
			java.lang.String paraentaccountresourceid, java.lang.String reason) {
		LOG.info("Executing operation connectaccountrequest");
		System.out.println(userresourceid);
		System.out.println(profileid);
		System.out.println(paraentaccountresourceid);
		System.out.println(reason);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Connectaccountrequestresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addthreadholdmessagetoaccountprofile(java.lang.String profile
	 * ,)java.lang.String countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype
	 * thresholdtype ,)java.lang.String thresholdmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addthreadholdmessagetoaccountprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Thresholdtype thresholdtype,
			java.lang.String thresholdmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addthreadholdmessagetoaccountprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(thresholdtype);
		System.out.println(thresholdmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addtransferCounttouserprofile(java.lang.String profile ,)java.lang.String
	 * countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype
	 * countertype ,)java.util.List<java.lang.String> transactiontype
	 * ,)java.lang.String limit
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery
	 * autoresetcounter ,)java.lang.String limitmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addtransferCounttouserprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype countertype,
			java.util.List<java.lang.String> transactiontype,
			java.lang.String limit,
			com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery autoresetcounter,
			java.lang.String limitmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addtransferCounttouserprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(countertype);
		System.out.println(transactiontype);
		System.out.println(limit);
		System.out.println(autoresetcounter);
		System.out.println(limitmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#resetpassword
	 * (java.lang.Boolean forcepasswordchangeafterlogin )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse resetpassword(
			java.lang.Boolean forcepasswordchangeafterlogin) {
		LOG.info("Executing operation resetpassword");
		System.out.println(forcepasswordchangeafterlogin);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * setprofilerequest(java.lang.String resourceid ,)java.lang.String
	 * profileid ,)java.lang.String reason )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse setprofilerequest(
			java.lang.String resourceid, java.lang.String profileid,
			java.lang.String reason) {
		LOG.info("Executing operation setprofilerequest");
		System.out.println(resourceid);
		System.out.println(profileid);
		System.out.println(reason);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addaccounttoexistinguser(java.lang.String resourceid ,)java.lang.String
	 * accounttype ,)java.lang.String profileid ,)java.lang.String currency )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Addaccounttoexistinguserrequestresponse addaccounttoexistinguser(
			java.lang.String resourceid, java.lang.String accounttype,
			java.lang.String profileid, java.lang.String currency) {
		LOG.info("Executing operation addaccounttoexistinguser");
		System.out.println(resourceid);
		System.out.println(accounttype);
		System.out.println(profileid);
		System.out.println(currency);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Addaccounttoexistinguserrequestresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * specifybalancingtypetoaccountprofile(java.lang.String profile
	 * ,)java.lang.String countername ,)java.lang.String description
	 * ,)java.lang.String limit
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery
	 * autoresetcounter ,)java.lang.String limitmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse specifybalancingtypetoaccountprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			java.lang.String limit,
			com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery autoresetcounter,
			java.lang.String limitmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation specifybalancingtypetoaccountprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(limit);
		System.out.println(autoresetcounter);
		System.out.println(limitmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#viewbackofusers
	 * (java.lang.String filter )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse viewbackofusers(
			java.lang.String filter) {
		LOG.info("Executing operation viewbackofusers");
		System.out.println(filter);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * approveresetpassword(java.lang.String newpassword ,)java.lang.String
	 * confirmpassword ,)java.lang.String otp )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse approveresetpassword(
			java.lang.String newpassword, java.lang.String confirmpassword,
			java.lang.String otp) {
		LOG.info("Executing operation approveresetpassword");
		System.out.println(newpassword);
		System.out.println(confirmpassword);
		System.out.println(otp);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#addglobalsetting
	 * (java.lang.String defaultuserprofile ,)java.lang.String
	 * defaultuseraccountprofile )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addglobalsetting(
			java.lang.String defaultuserprofile,
			java.lang.String defaultuseraccountprofile) {
		LOG.info("Executing operation addglobalsetting");
		System.out.println(defaultuserprofile);
		System.out.println(defaultuseraccountprofile);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * deletebackofusers(java.lang.String username ,)java.lang.String msisdn
	 * ,)java.lang.String email )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse deletebackofusers(
			java.lang.String username, java.lang.String msisdn,
			java.lang.String email) {
		LOG.info("Executing operation deletebackofusers");
		System.out.println(username);
		System.out.println(msisdn);
		System.out.println(email);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#addbackofusers
	 * (java.lang.String firstname ,)java.lang.String surname ,)java.lang.String
	 * username ,)java.lang.String msisdn ,)java.lang.String email
	 * ,)java.lang.String profile )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addbackofusers(
			java.lang.String firstname, java.lang.String surname,
			java.lang.String username, java.lang.String msisdn,
			java.lang.String email, java.lang.String profile) {
		LOG.info("Executing operation addbackofusers");
		System.out.println(firstname);
		System.out.println(surname);
		System.out.println(username);
		System.out.println(msisdn);
		System.out.println(email);
		System.out.println(profile);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addtransferCountmessagetoaccountprofile(java.lang.String profile
	 * ,)java.lang.String countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype
	 * countertype ,)java.lang.String transactiontype
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery
	 * autoresetcounter
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addtransferCountmessagetoaccountprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype countertype,
			java.lang.String transactiontype,
			com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery autoresetcounter,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addtransferCountmessagetoaccountprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(countertype);
		System.out.println(transactiontype);
		System.out.println(autoresetcounter);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addloginCountuserprofile(java.lang.String profile ,)java.lang.String
	 * countername ,)java.lang.String description ,)java.lang.String limit
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery
	 * autoresetcounter ,)java.lang.String limitmessage
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addloginCountuserprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			java.lang.String limit,
			com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery autoresetcounter,
			java.lang.String limitmessage,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addloginCountuserprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(limit);
		System.out.println(autoresetcounter);
		System.out.println(limitmessage);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addservicetouserprofile(java.lang.String servicetype
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addservicetouserprofile(
			java.lang.String servicetype,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addservicetouserprofile");
		System.out.println(servicetype);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#authenticate
	 * (java.lang.String resourceid ,)java.lang.String password )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Authenticationresponse authenticate(
			java.lang.String resourceid, java.lang.String password) {
		LOG.info("Executing operation authenticate");
		System.out.println(resourceid);
		System.out.println(password);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Authenticationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.provisioning.v1_0.Provisioning#
	 * addtransferCountmessagetouserprofile(java.lang.String profile
	 * ,)java.lang.String countername ,)java.lang.String description
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype
	 * countertype ,)java.lang.String transactiontype
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery
	 * autoresetcounter
	 * ,)com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.provisioning.v1.Operationresponse addtransferCountmessagetouserprofile(
			java.lang.String profile,
			java.lang.String countername,
			java.lang.String description,
			com.swifta.sub.mats.operation.provisioning.v1.Transfercounttype countertype,
			java.lang.String transactiontype,
			com.swifta.sub.mats.operation.provisioning.v1.Autoresetcounterevery autoresetcounter,
			com.swifta.sub.mats.operation.provisioning.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation addtransferCountmessagetouserprofile");
		System.out.println(profile);
		System.out.println(countername);
		System.out.println(description);
		System.out.println(countertype);
		System.out.println(transactiontype);
		System.out.println(autoresetcounter);
		System.out.println(extensionparameters);
		try {
			com.swifta.sub.mats.operation.provisioning.v1.Operationresponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
